
* (old) Install conda
- run bash Anaconda-latest-Linux-x86_64.sh
  - install location: /home/dhnam/program/anaconda3
- append the following to .bashrc
  : export PATH="/home/dhnam/program/anaconda3/bin:$PATH"
#    - or, ad conda env bin path to .bashrc
#      : export PATH="/home/dhnam/program/anaconda3/envs/default/bin:$PATH"

* Install
** Install conda
- Run bash Miniconda3-latest-Linux-x86_64.sh
 - install location: /home/dhnam/program/miniconda3
- "Do you wish the installer to initialize Miniconda3 by running conda init?"
 ==> yes
- Make the default environment
  #+begin_src sh
  conda create -n default python=3
  #+end_src
- Update ~/.bashrc to replace "base" with "default"
  e.g.
  #+begin_src bash
  CONDA=miniconda3  # anaconda3 or miniconda3 or ...
  export PATH="/home/dhnam/program/$CONDA/envs/default/bin:$PATH"
  conda activate default
  #+end_src
- (optional) Update ~/.profile
  #+begin_src bash
  CONDA=miniconda3  # anaconda3 or miniconda3 or ...
  export PATH="/home/dhnam/program/$CONDA/envs/default/bin:$PATH"
  #+end_src

** Install packages
*** install pip
https://stackoverflow.com/questions/41060382/using-pip-to-install-packages-to-anaconda-environment
#+begin_src sh
conda install pip
#+end_src
*** search specific version
#+begin_src sh
conda search spacy
#+end_src
*** install specific package
#+begin_src sh
conda install spacy=2.2.3
#+end_src
*** install a specific package via conda-forge
#+begin_src sh
conda install conda-forge::emacs=27.2
#+end_src
**** remove a package installed via conda-forge
#+begin_src sh
conda remove emacs=27.2
#+end_src

* Conda environment
** install / delete / update
*** Python 2
#+begin_src sh
conda create -n $ENV_NAME python=2.7 anaconda
#+end_src
*** Python 3
#+begin_src sh
conda create -n $ENV_NAME python=3.8 anaconda
#+end_src
*** Python 3 without specifying anaconda
#+begin_src sh
conda create -n $ENV_NAME python=3
#+end_src

- append "anaconda" results in install all things for base anaconda,
  such as "jupyter", "spyder", etc
- https://stackoverflow.com/questions/38066873/create-anaconda-python-environment-with-all-packages
*** Simple Python 3 version
#+begin_src sh
conda create -n $ENV_NAME python=3
#+end_src
*** Removing environments
# https://stackoverflow.com/a/49128056/6710003
#+begin_src sh
conda env remove -n $ENV_NAME
#+end_src
*** List environment directories
https://stackoverflow.com/a/54155338
#+begin_src sh
conda config --show envs_dirs
#+end_src
*** Install anaconda package in a minconda's environment
#+begin_src sh
conda install anaconda
#+end_src
*** conda remove with --all vs. conda env remove
https://stackoverflow.com/questions/69682414/what-does-the-all-flag-do-for-conda-env-remove
** Check conda version
#+begin_src sh
conda --version
#+end_src
** The path of the current conda environment
#+begin_src sh
echo $CONDA_PREFIX
#+end_src
** yml
https://3months.tistory.com/441
*** conda environment to .yaml (or .yml)
#+begin_src sh
conda activate $ENV_NAME
conda env export > environment.yaml
#+end_src
*** create conda environment from .yaml
#+begin_src sh
conda env create --file environment.yaml
#+end_src
*** update
Update a conda environment:
#+begin_src sh
conda env update --file environment.yaml --prune
#+end_src
where the nane of the environment is specified in .yaml file.

Update a  conda environment a different name:
#+begin_src sh
conda env update --name $ENV_NAME --file environment.yaml --prune
#+end_src

where ~--prune~ uninstalls packages that were removed from the .yaml file.
To keep packages, don't use ~--prune~.

* Packages
** Check the versions of an installed package
#+begin_src sh
conda list -n $ENV_NAME -f <package>
#+end_src
where "-f" option can be skipped

e.g
  #+begin_src sh
  conda list -n tabert cudatoolkit
  conda list -n tabert -f pytorch
  #+end_src

* Anaconda update
#+begin_src sh
conda install pytorch torchvision -c pytorch
#+end_src

* Activating bash script
https://blog.kovalevskyi.com/multiple-version-of-cuda-libraries-on-the-same-machine-b9502d50ae77
Anaconda can run any bash scripts each time when the environment is
activated. Such scripts should be placed in the following path:
/<path to anaconda>/envs/<env name>/etc/conda/activate.d/

e.g. setting up CUDA
#+begin_src sh
ENV_NAME=some-env
SCRIPT_DIR_PATH=$(conda info --base)/envs/$ENV_NAME/etc/conda/activate.d
mkdir -p $SCRIPT_DIR_PATH

SCRIPT_NAME=some-script.sh  # file name should have ".sh" extension
SCRIPT_PATH=$SCRIPT_DIR_PATH/$SCRIPT_NAME
touch $SCRIPT_PATH

echo 'export PATH=/home/${USER}/usr/local/cuda-11.6/bin:$PATH' >> $SCRIPT_PATH
echo 'export LD_LIBRARY_PATH=/home/${USER}/usr/local/cuda-11.6/lib64:$LD_LIBRARY_PATH' >> $SCRIPT_PATH
#+end_src

** Deprecated version
with an explicit prefix path
#+begin_src sh
# ~/program/miniconda3/envs/default/etc/conda/activate.d/
echo $CONDA_PREFIX/etc/conda/activate.d/
#+end_src

* Conda root path
#+begin_src sh
conda info --base
#+end_src

** Deprecated version
#+begin_src sh
echo $(dirname $(which conda))/..
echo $(realpath $(dirname $(which conda))/..)
#+end_src

* Conda activate in bash script
https://github.com/conda/conda/issues/7980#issuecomment-441358406

#+begin_src sh
source $(conda info --base)/etc/profile.d/conda.sh
conda activate my_env
#+end_src

** Deprecated version
#+begin_src bash
# $ source ~/anaconda3/etc/profile.d/conda.sh
# $ conda activate my_env

source $(dirname $(which conda))/../etc/profile.d/conda.sh
conda activate my_env
#+end_src
