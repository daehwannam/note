
* native emacs-lisp functions

* common lisp functions
** cl-remove-if-not
   remains items that satisfy the predicate
   e.g.
   #+begin_src elisp
   (require 'cl-lib)
   (cl-remove-if-not (lambda (x) (> x 3)) '(1 3 2 4 6 0 2 5))
   #+end_src

* setq-default
  https://stackoverflow.com/a/22673010
  https://stackoverflow.com/a/18173666
  https://www.gnu.org/software/emacs/manual/html_node/elisp/Intro-to-Buffer_002dLocal.html

  if a variable is buffer-local, it allows the variable to have a global value and local values for buffers
  otherwise, setq-default and setq have no difference
  - use 'make-local-variable' to declare a buffer-local variable in a specific buffer
    you should call 'make-local-variable' for each buffer to declare and use the buffer-local variable
    e.g. (make-local-variable 'some-variable-symbol)
  - 'setq-default' assigns a variable a global value
  - 'setq' assigns a variable a local value for the current buffer
  - 'setq-local' assigns ...

* functions
** executable-find
   check if an executable exists
   e.g.
   $ (executable-find "pdfgrep")
** key-description
   https://stackoverflow.com/a/7292684
   key-description is the reverse of kbd
   #+begin_src elisp
   (key-description (kbd "M-DEL"))
   ;; (key-description [134217855])
   #+end_src
