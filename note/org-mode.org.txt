
* Common
** org-shiftleft / org-shiftright
these commands change
- states (TODO, DONE, ...)
- item bullet types (-, *, +, 1., ...)

* Agenda
- j (org-agenda-goto-date): make agenda starting from the date
** When 'org-agenda-files' wasn't updated
'org-agenda-files' variable may read old paths by 'custom-set-variables' function in 'custom-file'
1. "M-x eval-expression (find-file custom-file)" or
   "M-: (find-file custom-file)" to open the custom file
2. If 'org-agenda-files' read old paths, remove the custom-file


* Calendar
- M-x calendar
- org-calendar-goto-agenda: type "c"
  https://emacs.stackexchange.com/questions/29632/org-mode-calendar-integration

* LaTeX
** equations
- \(\alpha, \beta, \gamma\)
- $\alpha, \beta, \gamma$
** example latex formula in org mode
\[E=mc^2\]

\begin{equation}
  f(x) =  \sum\limits_0^\infty(f^{(n)}(x)|_{x=0} \cdot x)
\end{equation}
** org-latex-preview
https://orgmode.org/manual/Previewing-LaTeX-fragments.html#Previewing-LaTeX-fragments
- turn on visualizing latex in the current entry (or in marked region)
  C-c C-x C-l (org-latex-preview)
- turn off visualizing latex in the current entry
  C-u C-c C-x C-l (org-latex-preview with a prefix argument)
- turn on visualizing latex in the current buffer
  C-u C-u C-c C-x C-l (org-latex-preview with two prefix arguments)
- turn off visualizing latex in the current buffer
  C-u C-u C-u C-c C-x C-l (org-latex-preview with three prefix arguments)
*** changing equation font size
https://emacs.stackexchange.com/a/19881
- M-x customize
- Search "org-format"
- Enter "Org Format Latex Options"
- Change the value of "scale"
  e.g. 1.0 --> 1.5
** dynamically enable/disable latex preview
org-fragtog-mode

* Mark an unit
- org-mark-element (M-h)
- org-babel-mark-block (C-c C-v C-M-h)

* code block with org-babel
https://orgmode.org/manual/Literal-Examples.html
- type "<s" then press <TAB>
- type "<e" then press <TAB> for untyped example (literal examples)
** writing the result of standard output
#+begin_src python :results output
# indentation
import sys
print("hello world")
#+end_src

#+RESULTS:
: hello world
** output without colon (:)
https://emacs.stackexchange.com/a/36643

e.g. displaying other file's content
#+BEGIN_SRC sh :results output drawer
# cat data.csv  # print all cotents
head -n 3 ~/.bashrc  # print first 3 lines
#+END_SRC

'drawer' option doesn't add a colon (:) for each line.
** python virtual environment
Change python environment before evaluating code block by "M-x pyvenv-workon"
** edit code black in a special buffer
org-edit-special (C-c ')
*** commands of the special buffer for code editing
 - org-edit-src-exit (C-c ')
 - org-edit-src-abort (C-c C-k)
 - <code evaluation> (C-c C-c)
** tangle: extract source code from org-mode
- Add :tangle with a file name
  #+begin_src sh :tangle some-code.sh
  echo "This code block is exported to 'some-code.sh'"
  #+end_src

  #+begin_src sh :tangle some-code.sh
  echo "This code block is also exported to 'some-code.sh'"
  #+end_src
- Run org-babel-tangle (C-c C-v t)
*** using tangle from bash
#+begin_src sh
emacs --no-init --batch --eval='(progn (set-buffer (find-file-noselect "some-note.org" nil nil nil)) (org-babel-tangle))'
#+end_src
*** add shebang
#+begin_src bash :tangle setup.sh :shebang "#!/bin/bash"
set -e  # stop the bash script when an error occurs
#+end_src
** choosing a working directory
https://orgmode.org/manual/Environment-of-a-Code-Block.html
- local
  #+BEGIN_SRC R :file myplot.png :dir ~/Work
    matplot(matrix(rnorm(100), 10), type="l")
  #+END_SRC
- remote
  #+BEGIN_SRC R :file plot.png :dir /scp:dand@yakuba.princeton.edu:
    plot(1:10, main=system("hostname", intern=TRUE))
  #+END_SRC
- referencing a remote file
  #+begin_example
  [[file:/scp:dand@yakuba.princeton.edu:/home/dand/plot.png][plot.png]]
  #+end_example
** session
- babel with a session keep the process
- name of session is optional
- sesssion can be seen in 'list-processes' and kill it by pressing 'd' (process-menu-delete-process)

#+begin_src sh :session some-session-name
SOME_VAR='some-value'
#+end_src

#+begin_src sh :session some-session-name
echo $SOME_VAR
#+end_src
** running python with a conda environment
https://www.reddit.com/r/emacs/comments/9jg58b/comment/e6sg3st/?utm_source=share&utm_medium=web2x&context=3
#+begin_src emacs-lisp
;; (pyvenv-activate "~/path/to/.venv")
;; or
(pyvenv-workon "some-env")
#+end_src

#+begin_src python :results output
import sys
print('\n'.join(sys.path))
#+end_src
** inline code block
https://orgmode.org/manual/Structure-of-Code-Blocks.html

- inline code block also can be evaluated by "C-c C-c" command

#+begin_example
src_<language>{<body>}
# or
src_<language>[<header arguments>]{<body>}
#+end_example

e.g.
- src_sh{echo 'hello world!'}
- src_python[:results output]{print("hello world!")}

* Export
- C-c C-e: org-export-dispatch

- C-c C-e l p: export to pdf
- C-c C-e l o: export to pdf and open it

* Link
https://orgmode.org/manual/Handling-links.html
- C-c l     (org-store-link)
- C-c C-l     (org-insert-link)
- C-c C-o     (org-open-at-point)
** Format
- link with string to display
  #+begin_example
  [[/path/to/file::reference][string-to-display]]
  #+end_example
- link only
  #+begin_example
  [[/path/to/file::reference]]
  #+end_example
- reference by string match
  'reference' could be a line number or string.
  - [[./org-mode.org.txt::*Format][Link to Format section]]
    #+begin_example
    [[./org-mode.org.txt::*Format][Link to Format section]]
    # or
    [[file:./org-mode.org.txt::*Format][Link to Format section]]
    #+end_example
  - [[./org-mode.org.txt::113][Link to line 113]]
    #+begin_example
    [[./org-mode.org.txt::113][Link to line 113]]
    # or
    [[file:./org-mode.org.txt::113][Link to line 113]]
    #+end_example

* Table
** Install Inconsolata font for org-mode tables with CJK characters
$ sudo apt-get install fonts-inconsolata  # for Ubuntu 16.04
or, for Windows, download from https://candyfonts.com/font/inconsolata.htm
** transpose
- org-table-transpose-table-at-point
** Usage
https://orgmode.org/worg/org-tutorials/tables.html
*** table creation methods
**** make rough table with '|' then type TAB
#+begin_src org
|something
#+end_src
#+begin_src org
| some | thing |
|-
#+end_src
**** 'org-table-create-or-convert-from-region' (C-c-|)
**** separated strings to table
- make region over comma/tab separated strings
- type "C-c-|"
#+begin_src org
some, comma, separated, values
some	comma	separated	values
#+end_src
*** move row/columns
- org-metaleft (M-<left>)
- org-metaright (M-<right>)
- org-metaup (M-<up>)
- org-metadown (M-<down>)
*** insert/delete row/columns
- org-shiftmetaright (M-S-<right>)
- org-shiftmetaleft (M-S-<left>)
- org-shiftmetadown (M-S-<down>)
- org-shiftmetaup (M-S-<up>)
*** narrowing the visiable par of a column
https://emacs.stackexchange.com/a/53644
- C-c <TAB> : toggle narrowing for tab
- C-u C-c <TAB> : narrow all tabs
- C-c ` : edit cell
| <10>             | <15>                        |
| A very wide cell | Another very very wide cell |
*** visualize references
- org-table-field-info (C-c ?) : show the current cell's info
- org-table-toggle-coordinate-overlays ("C-c }") : visualize reference info
*** formula
https://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html
- e.g. mean over columns
  #+begin_example org
  | Student  | Maths | Physics | Mean            |
  |----------+-------+---------+-----------------|
  | Bertrand |    13 |      09 | :=vmean($2..$3) |
  | Henri    |    15 |      14 |                 |
  | Arnold   |    17 |      13 |                 |
  #+end_example
  then type "C-c C-c"
- interactively update formula for a specific cell
  - move cursor to a cell where a formula is applied
  - type "C-u C-c ="
*** formula examples
- mean over columns
  ~:=vmean($2..$3)~
- sum over rows
  ~:=vsum(@2..@10)"~
- add two cell values
  ~:=@3$2 + @2$4~
*** relative table reference
https://orgmode.org/manual/References.html
- ~@-2~ : 2 step previous row
- ~$+3~ : 3 step next column
- ~@-2$+3~ : a cell which is 2 step previous in rows and 3 step next in columns

* Mobile
https://orgmode.org/worg/org-tutorials/
** Orgzly
** Organice
- App: https://organice.200ok.ch/
- Github: https://github.com/200ok-ch/organice
- Documentation: https://organice.200ok.ch/documentation.html

* indentation
** remove hard indentation
use "org-unindent-buffer"
** add hard indentation
use "org-indent-region" when "org-indent-mode" is nil
#+begin_src elisp
(org-indent-mode -1)
(org-indent-region (point-min) (point-max))
#+end_src
** switch between odd/oddeven bullet levels
https://orgmode.org/manual/Hard-indentation.html
- M-x org-convert-to-odd-levels
- M-x org-convert-to-oddeven-levels
** Indentation setting per each file(buffer)
https://www.reddit.com/r/emacs/comments/97naje/comment/e49rzvi/?utm_source=share&utm_medium=web2x&context=3
https://orgmode.org/manual/In_002dbuffer-Settings.html#DOCF151

Start the org file with the following in-buffer settings
- #+STARTUP: indent
- #+STARTUP: noindent

* Beamer
** Example
https://orgmode.org/manual/A-Beamer-example.html
** .org to .pdf
https://stackoverflow.com/a/39171652
- M-x org-beamer-export-to-pdf
  - after the command is executed, you can run the following shortcut:
    C-c C-e l P

* Timer
- reference: https://orgmode.org/manual/Timers.html
- tutorial: https://www.youtube.com/watch?v=lxkPeJS6keY
** D-Bus error fix
*** Error: (dbus-error "No connection to bus" :session)
https://github.com/emacs-eaf/emacs-application-framework/issues/36#issuecomment-409860979
add the following code into the window-manger's configuration
#+begin_src sh
eval $(dbus-launch)
export DBUS_SESSION_BUS_ADDRESS
#+end_src
*** Error: (dbus-error "The name org.freedesktop.Notifications was not provided by any .service files")
https://unix.stackexchange.com/a/458661
#+begin_src sh
sudo apt install notify-osd
sudo apt install dunst
#+end_src

* Miscellaneous
** Tagging for heading
- Type 'C-c C-c' on the line of heading.
  Then, you can insert a tag
- You can also use 'C-c C-q' (org-set-tags-command) in the body of the section
*** tags
| Tag        | Description                   |
|------------+-------------------------------|
| :noexport: | It doesn't export the section |

** Insert properties
type 'C-c C-x p' to insert properties in a specific heading
