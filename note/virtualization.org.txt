* VirtualBox
** Mount command
   linux command: sudo mount -t vboxsf my_data ~/my_data
   - vboxsf my_data: shared folder in host os (os installed in real pc)
   - ~/my_data: folder in guest os (os from virtual image)

** Port forwarding for SSH
   - Way 1: VBox command: VBoxManage modifyvm myserver --natpf1 "ssh,tcp,,<port for guest ssh server>,,22"
   - Way 2
     - Settings -> Network -> Adapter 1 -> Advanced -> Port Forwarding
     - Insert "ssh / TCP / / 61112 / / 22

** Remote desktop to Guest: Remote display
   Settings -> Display -> Remote Display -> Enagle Server & change Server Port & Authentication=External 
*** Connection problem of Windows host
    https://www.virtualbox.org/ticket/4406
    check "save credentials"

** Copy image
   https://srackham.wordpress.com/cloning-and-copying-virtualbox-virtual-machines/
   File -> Virtual Media Manager 

** Slow booting
   - https://askubuntu.com/a/1038939


* KVM
  Kernel-based Virtual Machine

** Setup
*** Check if virtualization is supported
    https://welcome1208.tistory.com/63
    https://hiseon.me/server/ubuntu-kvm-install/
*** install
    https://hiseon.me/server/ubuntu-kvm-install/
    - install
      $ sudo apt-get update
      $ sudo apt-get install qemu-kvm libvirt-daemon-system virtinst bridge-utils cpu-checker
    - add an user to the group named kvm for convenient use of kvm
      $ sudo adduser some-user kvm
    - check installation
      $ kvm-ok
    - list virtual machines
      https://welcome1208.tistory.com/63
      $ virsh list --all
*** install the latest KVM (optional)
    https://www.qemu.org/download/#source
    - prerequisite
      #+begin_src sh
      sudo apt-get install -y ninja-build
      #+end_src
    - build
      #+begin_src sh
      git clone https://gitlab.com/qemu-project/qemu.git
      cd qemu
      git submodule init
      git submodule update --recursive
      ./configure
      make  # or 'make install' directly
      #+end_src
    - output directory: ./build
    - check version
      $ ./build/qemu-x86_64 --version
    - install
      $ make install
    - version check
      $ kvm --version
*** bridged mode setup (optional)
    - NAT vs Bridged mode
      https://developerin.tistory.com/18
      https://superuser.com/questions/227505/what-is-the-difference-between-nat-bridged-host-only-networking
    - setup methods
      - https://linux.systemv.pe.kr/kvm%EC%97%90-bridge-network-%EC%84%A4%EC%A0%95/
      - https://hiseon.me/server/ubuntu-kvm-install/ and https://hiseon.me/linux/ubuntu/bridge-configuration/
*** virt-manager setup
    https://hiseon.me/server/how-to-use-virt-manager/
    https://welcome1208.tistory.com/65

    It's a GUI tool for managing virtual machines, although kvm commands can do too
    - install
      $ sudo apt install virt-manager
    - run
      $ virt-manager
*** resize image's capacity
    https://superuser.com/a/375847
    $ qemu-img resize $IMAGE.qcow2 +$TOTAL_SIZE
    where $IMAGE.qcow2 is the VM's image path ( [[*path of virtual machine image][path of virtual machine image]] )
    
    https://maunium.net/blog/resizing-qcow2-images/
    $ qemu-img resize $IMAGE.qcow2 +$ADDITIONAL_SIZE
    e.g. qemu-img resize win10.qcow2 +10G

    https://superuser.com/a/1174602
    Then you should update guest os's disk
    e.g. in Windows 10, use "Disk Management" to extend C driver's volume
**** reducing image's size
     http://woshub.com/kvm-expand-shrink-vm-disk/

     [Caution]
     Shrinking VM's can remove data in your image
     $ sudo qemu-img resize --shrink $IMAGE.qcow2 40G
     $ sudo qemu-img resize --shrink $IMAGE.qcow2 -20G
*** enable screen resize ability
    https://stackoverflow.com/a/41990601

    - download 'spice-guest-tools'('spice-vdagent') for window(linux) guest:
      https://www.spice-space.org/download.html#guest
    - install the program
    - QEMU/KVM menu -> View -> Scale Display -> Auto resize VM with window
*** switching from guest to host
    https://superuser.com/a/1452377
    
    - the default key: Ctrl+Alt
    - Change grab key:
      run virt-manager -> menu -> Edit -> Preferences -> "Console" -> "Grab keys"
    - e.g. use grab key to switch workspace
      Ctrl+Alt, Ctrl+Alt+<up> : switch to upperside workspace
*** path of virtual machine image
    "Show virtual hardware details" -> "IDE Disk 1" -> "Details" -> "Source path"
*** create virtual machines with existing image
    You can "Create a new virtual machine" with "Import existing disk image" option
*** copy virtual machines into other computers
    https://www.youtube.com/watch?v=0Ny0__uTGfM

    you can copy your image (.qcow2 file) into another computer,
    then create the same virtual machine.

    before create the image on the other machine, you may need to change the permission:
    $ sudo chmod 777 my_image.qcow2
*** edit guest VM's XML configuration
    https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/virtualization_deployment_and_administration_guide/sect-managing_guest_virtual_machines_with_virsh-editing_a_guest_virtual_machines_configuration_file

    - list VMs then edit
      $ virsh list --all  # list all VMs
      $ virsh edit <VM's name>

    - editing with emacs:
      https://unix.stackexchange.com/a/502691
      $ EDITOR=emacs virsh edit win10
      $ EDITOR=emacsclient virsh edit win10
      $ EDITOR="emacs -nw" virsh edit win10

      You can also export the default editor in ~/.bashrc
      $ export EDITOR=emacs
      $ export EDITOR=emacsclient
      $ export EDITOR="emacs -nw"
*** sharing via samba
    https://unix.stackexchange.com/a/183609
    https://unix.stackexchange.com/a/86083

**** samba setup
     https://psychoria.tistory.com/678
     - install
       #+begin_src sh
       # install samba
       sudo apt install samba

       # add user account to samba
       sudo smbpasswd -a <user>
       #+end_src

     - update /etc/samba/smb.conf
       add the following information to the bottom of the config file:
       #+begin_example
       [shared network folder name]
       comment = multimedia directory
       path = /data/Multimedia
       valid users = id1,id2
       writeable = yes
       read only = no
       create mode = 0777
       directory mode = 0777
       #+end_example

     - restart to apply config
       $ sudo service smbd restart
**** connect to samba from windows guest
     https://www.techrepublic.com/article/how-to-connect-to-linux-samba-shares-from-windows-10/
     - right mouse click on PC
     - select "Add a network location"
     - check "Reconnect" and "Use different credentials"
       (not to forget credentials - https://superuser.com/a/262598 )
     - type "\\<IP address>\<shared network folder name>" for as network folder
       where 10.0.2.2 means host machine's IP
       e.g. "\\192.168.122.1\shared data"
       - you can find ip address of host for virtual machines :
         $ ip addr  # type this command in the host terminal
         you can get IP from a network driver such as 'virbr0'
     - input user's id and samba's password
       and check "Remember credentials"
       (not to forget credentials - https://superuser.com/a/262598 )

*** sharing folder of host linux with guest windows (optional)
    https://unix.stackexchange.com/a/635636
**** unknown fs driver type 'virtiofs'
     # https://lists.gnu.org/archive/html/qemu-devel/2020-08/msg05866.html
     # virtiofsd needs a higher version
     # $ virtiofsd --version

     https://virtio-fs.gitlab.io/
     qemu-kvm needs a higher version
     $ kvm --version
**** update VM's XML config
     https://libvirt.org/kbase/virtiofs.html
     #+begin_src xml
     <domain>
       ...
       <memoryBacking>
         <source type='memfd'/>
         <access mode='shared'/>
       </memoryBacking>
       ...
       <devices>
         ...
         <filesystem type='mount' accessmode='passthrough'>
           <driver type='virtiofs'/>
           <source dir='/path'/>
           <target dir='mount_tag'/>
         </filesystem>
         ...
       </devices>
     </domain>
     #+end_src

** Usage
*** using USB device connected to host
    https://www.youtube.com/watch?v=SSQxrgE_rjg
    https://www.linux-kvm.org/page/USB_Host_Device_Assigned_to_Guest

    - shutdown VM
    - click "Show virtual hardware details"
    - click "Add Hardware" at the left bottom
    - click "USB Host Device" and select your device
    - run VM
    - clic "Virtual Machine" -> "Redirect USB device" -> select device
